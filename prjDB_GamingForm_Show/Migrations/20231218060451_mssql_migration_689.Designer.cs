// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using prjDB_GamingForm_Show.Models.Entities;

#nullable disable

namespace prjDB_GamingForm_Show.Migrations
{
    [DbContext(typeof(DbGamingFormTestContext))]
    [Migration("20231218060451_mssql_migration_689")]
    partial class mssql_migration_689
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Action", b =>
                {
                    b.Property<int>("ActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ActionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionId"));

                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ActionId");

                    b.ToTable("Action", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("AdminAccount")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AdminPassword")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("ImgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RankId")
                        .HasColumnType("int")
                        .HasColumnName("RankID");

                    b.HasKey("AdminId");

                    b.HasIndex("RankId");

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.AdminRank", b =>
                {
                    b.Property<int>("RankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RankID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RankId"));

                    b.Property<bool>("RkBlog")
                        .HasColumnType("bit")
                        .HasColumnName("RK_Blog");

                    b.Property<bool>("RkFirm")
                        .HasColumnType("bit")
                        .HasColumnName("RK_Firm");

                    b.Property<bool>("RkMember")
                        .HasColumnType("bit")
                        .HasColumnName("RK_Member");

                    b.Property<bool>("RkOrder")
                        .HasColumnType("bit")
                        .HasColumnName("RK_Order");

                    b.Property<bool>("RkProduct")
                        .HasColumnType("bit")
                        .HasColumnName("RK_Product");

                    b.HasKey("RankId");

                    b.ToTable("AdminRank", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Advertise", b =>
                {
                    b.Property<int>("AdvertiseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AdvertiseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdvertiseId"));

                    b.Property<string>("AdContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fImagePath");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AdvertiseId")
                        .HasName("PK_AD");

                    b.HasIndex("StatusId");

                    b.ToTable("Advertise", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ArticleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleId"));

                    b.Property<string>("ArticleContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPinned")
                        .HasColumnType("bit");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ReplyArticleId")
                        .HasColumnType("int")
                        .HasColumnName("ReplyArticleID");

                    b.Property<int>("SubBlogId")
                        .HasColumnType("int")
                        .HasColumnName("SubBlogID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("ArticleId");

                    b.HasIndex("MemberId");

                    b.HasIndex("ReplyArticleId");

                    b.HasIndex("SubBlogId");

                    b.ToTable("Article", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.ArticleAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActionId")
                        .HasColumnType("int")
                        .HasColumnName("ActionID");

                    b.Property<int>("ArticleId")
                        .HasColumnType("int")
                        .HasColumnName("ArticleID");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    b.HasKey("Id")
                        .HasName("PK_BlogAction");

                    b.HasIndex("ActionId");

                    b.HasIndex("ArticleId");

                    b.HasIndex("MemberId");

                    b.ToTable("ArticleAction", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.ArticleComplain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int")
                        .HasColumnName("ArticleID");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    b.Property<string>("ReportContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime");

                    b.Property<int>("SubTagId")
                        .HasColumnType("int")
                        .HasColumnName("SubTagID");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("MemberId");

                    b.HasIndex("SubTagId");

                    b.ToTable("ArticleComplain", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BlogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"));

                    b.Property<string>("FImagePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fImagePath");

                    b.Property<int>("SubTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubTagID")
                        .HasDefaultValueSql("((10))");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BlogId");

                    b.HasIndex("SubTagId");

                    b.ToTable("Blog", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChatContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCheck")
                        .HasColumnType("bit");

                    b.Property<string>("ModefiedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceiveAdmin")
                        .HasColumnType("int");

                    b.Property<int>("SenderAdmin")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceiveAdmin");

                    b.HasIndex("SenderAdmin");

                    b.ToTable("Chat", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Coupon", b =>
                {
                    b.Property<int>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CouponID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CouponId"));

                    b.Property<string>("CouponContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("Reduce")
                        .HasColumnType("int");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("title");

                    b.HasKey("CouponId")
                        .HasName("PK_Certificate");

                    b.HasIndex("StatusId");

                    b.ToTable("Coupon", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Depute", b =>
                {
                    b.Property<int>("DeputeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DeputeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeputeId"));

                    b.Property<string>("DeputeContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modifiedate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int")
                        .HasColumnName("ProviderID");

                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RegionID")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID")
                        .HasDefaultValueSql("((4))");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("DeputeId")
                        .HasName("PK_Job Opportunities");

                    b.HasIndex("ProviderId");

                    b.HasIndex("RegionId");

                    b.HasIndex("StatusId");

                    b.ToTable("Depute", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.DeputeAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActionId")
                        .HasColumnType("int")
                        .HasColumnName("ActionID");

                    b.Property<int>("DeputeId")
                        .HasColumnType("int")
                        .HasColumnName("DeputeID");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("DeputeId");

                    b.HasIndex("MemberId");

                    b.ToTable("DeputeAction", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.DeputeComplain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeputeId")
                        .HasColumnType("int")
                        .HasColumnName("DeputeID");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    b.Property<string>("ReportContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID")
                        .HasDefaultValueSql("((28))");

                    b.Property<int>("SubTagId")
                        .HasColumnType("int")
                        .HasColumnName("SubTagID");

                    b.HasKey("Id");

                    b.HasIndex("DeputeId");

                    b.HasIndex("MemberId");

                    b.HasIndex("StatusId");

                    b.HasIndex("SubTagId");

                    b.ToTable("DeputeComplain", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.DeputeRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplyStatusId")
                        .HasColumnType("int")
                        .HasColumnName("ApplyStatusID");

                    b.Property<int>("DeputeId")
                        .HasColumnType("int")
                        .HasColumnName("DeputeID");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    b.Property<string>("RecordContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplyContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplyFileName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_JobResume");

                    b.HasIndex("ApplyStatusId");

                    b.HasIndex("DeputeId");

                    b.HasIndex("MemberId");

                    b.ToTable("DeputeRecord", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.DeputeSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeputeId")
                        .HasColumnType("int")
                        .HasColumnName("DeputeID");

                    b.Property<int>("SkillId")
                        .HasColumnType("int")
                        .HasColumnName("SkillID");

                    b.HasKey("Id")
                        .HasName("PK_JobSkill");

                    b.HasIndex("DeputeId");

                    b.HasIndex("SkillId");

                    b.ToTable("DeputeSkill", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.EcpayOrder", b =>
                {
                    b.Property<string>("MerchantTradeNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MemberID");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentTypeChargeFee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RtnCode")
                        .HasColumnType("int");

                    b.Property<string>("RtnMsg")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SimulatePaid")
                        .HasColumnType("int");

                    b.Property<int?>("TradeAmt")
                        .HasColumnType("int");

                    b.Property<string>("TradeDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TradeNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MerchantTradeNo");

                    b.ToTable("EcpayOrders");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GenderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GenderId")
                        .HasName("PK_Firm");

                    b.ToTable("Gender", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ImageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<string>("FImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fImagePath");

                    b.HasKey("ImageId");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.JobAdvertise", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("AdvertiseId")
                        .HasColumnType("int")
                        .HasColumnName("AdvertiseID");

                    b.Property<int>("JobId")
                        .HasColumnType("int")
                        .HasColumnName("JobID");

                    b.HasKey("Id");

                    b.HasIndex("AdvertiseId");

                    b.ToTable("JobAdvertise", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<DateTime>("Birth")
                        .HasColumnType("date");

                    b.Property<int>("BonusPoint")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fImagePath");

                    b.Property<int>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((3))");

                    b.Property<string>("Mycomment")
                        .HasColumnType("ntext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("MemberId");

                    b.HasIndex("Gender");

                    b.HasIndex("StatusId");

                    b.ToTable("Member", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.MemberChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChatContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCheck")
                        .HasColumnType("bit");

                    b.Property<string>("ModefiedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceiveMember")
                        .HasColumnType("int");

                    b.Property<int>("SenderMember")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceiveMember");

                    b.HasIndex("SenderMember");

                    b.ToTable("MemberChat", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.MemberCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CollectionId")
                        .HasColumnType("int")
                        .HasColumnName("CollectionID");

                    b.Property<string>("FImagePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fImagePath");

                    b.Property<string>("Intro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    b.Property<string>("ModifiedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyCollection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberCollection", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.MemberCoupon", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("CouponId")
                        .HasColumnType("int")
                        .HasColumnName("CouponID");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberCoupon", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.MemberStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MemeberId")
                        .HasColumnType("int")
                        .HasColumnName("MemeberID");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.HasKey("Id");

                    b.ToTable("MemberStatus", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.MemberTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    b.Property<int?>("SubTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubTagID")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TagID")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("SubTagId");

                    b.HasIndex("TagId");

                    b.ToTable("MemberTag", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.NewsLetter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HtmlContent")
                        .HasColumnType("int");

                    b.Property<int>("Title")
                        .HasColumnType("int")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK_ProductAdvertise");

                    b.ToTable("NewsLetter", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("date");

                    b.Property<int?>("CouponId")
                        .HasColumnType("int")
                        .HasColumnName("CouponID");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    b.Property<string>("Note")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<decimal>("SumPrice")
                        .HasColumnType("money");

                    b.HasKey("OrderId");

                    b.HasIndex("CouponId");

                    b.HasIndex("MemberId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("StatusId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.OrderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Disconut")
                        .HasColumnType("real");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("Quantinty")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProduct", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PaymentId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<DateTime>("AvailableDate")
                        .HasColumnType("date");

                    b.Property<string>("FImagePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fImagePath");

                    b.Property<int>("Goods")
                        .HasColumnType("int");

                    b.Property<int?>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MemberID")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("ProductContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<int>("UnitStock")
                        .HasColumnType("int");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("MemberId");

                    b.HasIndex("StatusId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.ProductComplain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MemeberId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ReplyContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID")
                        .HasDefaultValueSql("((28))");

                    b.Property<int>("SubTagId")
                        .HasColumnType("int")
                        .HasColumnName("SubTagID");

                    b.HasKey("Id");

                    b.HasIndex("MemeberId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StatusId");

                    b.HasIndex("SubTagId");

                    b.ToTable("ProductComplain", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.ProductEvaluate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EvaContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvaLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductEvaluate", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ImageId")
                        .HasColumnType("int")
                        .HasColumnName("ImageID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImage", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.ProductTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("SubTagId")
                        .HasColumnType("int")
                        .HasColumnName("SubTagID");

                    b.HasKey("Id")
                        .HasName("PK_ProductAction");

                    b.HasIndex("ProductId");

                    b.HasIndex("SubTagId");

                    b.ToTable("ProductTag", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RegionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegionId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RegionId");

                    b.ToTable("Region", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.RegionDistrict", b =>
                {
                    b.Property<int>("Zipcode")
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int")
                        .HasColumnName("RegionID");

                    b.HasKey("Zipcode")
                        .HasName("PK_RegionDistrict_1");

                    b.HasIndex("RegionId");

                    b.ToTable("RegionDistrict", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Reply", b =>
                {
                    b.Property<int>("ReplyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReplyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReplyId"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int")
                        .HasColumnName("ArticleID");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ReplyContents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReplyId");

                    b.HasIndex("ArticleId");

                    b.HasIndex("MemberId");

                    b.ToTable("Reply", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.SerachRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDays")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SerachRecord", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SkillID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SkillClassId")
                        .HasColumnType("int")
                        .HasColumnName("SkillClassID");

                    b.HasKey("SkillId");

                    b.HasIndex("SkillClassId");

                    b.ToTable("Skill", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.SkillClass", b =>
                {
                    b.Property<int>("SkillClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SkillClassID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillClassId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SkillClassId");

                    b.ToTable("SkillClass", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusId");

                    b.ToTable("Status", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.SubBlog", b =>
                {
                    b.Property<int>("SubBlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubBlogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubBlogId"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int")
                        .HasColumnName("BlogID");

                    b.Property<bool>("IsMemberBlog")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentBlogId")
                        .HasColumnType("int")
                        .HasColumnName("ParentBlogID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SubBlogId");

                    b.HasIndex("BlogId");

                    b.ToTable("SubBlog", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.SubTag", b =>
                {
                    b.Property<int>("SubTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubTagID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubTagId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TagId")
                        .HasColumnType("int")
                        .HasColumnName("TagID");

                    b.HasKey("SubTagId");

                    b.HasIndex("TagId");

                    b.ToTable("SubTag", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TagID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagId");

                    b.ToTable("Tag", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.WishList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("ProductId");

                    b.ToTable("WishList", (string)null);
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Admin", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.AdminRank", "Rank")
                        .WithMany("Admins")
                        .HasForeignKey("RankId")
                        .IsRequired()
                        .HasConstraintName("FK_Admin_AdminRank");

                    b.Navigation("Rank");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Advertise", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Status", "Status")
                        .WithMany("Advertises")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_AD_Status");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Article", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "Member")
                        .WithMany("Articles")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_Article_Member");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Article", "ReplyArticle")
                        .WithMany("InverseReplyArticle")
                        .HasForeignKey("ReplyArticleId")
                        .HasConstraintName("FK_Article_Article");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.SubBlog", "SubBlog")
                        .WithMany("Articles")
                        .HasForeignKey("SubBlogId")
                        .IsRequired()
                        .HasConstraintName("FK_Article_SubBlog");

                    b.Navigation("Member");

                    b.Navigation("ReplyArticle");

                    b.Navigation("SubBlog");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.ArticleAction", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Action", "Action")
                        .WithMany("ArticleActions")
                        .HasForeignKey("ActionId")
                        .IsRequired()
                        .HasConstraintName("FK_ArticleAction_Action");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Article", "Article")
                        .WithMany("ArticleActions")
                        .HasForeignKey("ArticleId")
                        .IsRequired()
                        .HasConstraintName("FK_ArticleAction_Article");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "Member")
                        .WithMany("ArticleActions")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_ArticleAction_Member");

                    b.Navigation("Action");

                    b.Navigation("Article");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.ArticleComplain", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Article", "Article")
                        .WithMany("ArticleComplains")
                        .HasForeignKey("ArticleId")
                        .IsRequired()
                        .HasConstraintName("FK_ArticleComplain_Article");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "Member")
                        .WithMany("ArticleComplains")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_ArticleComplain_Member");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.SubTag", "SubTag")
                        .WithMany("ArticleComplains")
                        .HasForeignKey("SubTagId")
                        .IsRequired()
                        .HasConstraintName("FK_ArticleComplain_SubTag");

                    b.Navigation("Article");

                    b.Navigation("Member");

                    b.Navigation("SubTag");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Blog", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.SubTag", "SubTag")
                        .WithMany("Blogs")
                        .HasForeignKey("SubTagId")
                        .IsRequired()
                        .HasConstraintName("FK_Blog_SubTag");

                    b.Navigation("SubTag");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Chat", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Admin", "ReceiveAdminNavigation")
                        .WithMany("ChatReceiveAdminNavigations")
                        .HasForeignKey("ReceiveAdmin")
                        .IsRequired()
                        .HasConstraintName("FK_Chat_Admin1");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Admin", "SenderAdminNavigation")
                        .WithMany("ChatSenderAdminNavigations")
                        .HasForeignKey("SenderAdmin")
                        .IsRequired()
                        .HasConstraintName("FK_Chat_Admin");

                    b.Navigation("ReceiveAdminNavigation");

                    b.Navigation("SenderAdminNavigation");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Coupon", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Status", "Status")
                        .WithMany("Coupons")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Coupon_Status");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Depute", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "Provider")
                        .WithMany("Deputes")
                        .HasForeignKey("ProviderId")
                        .IsRequired()
                        .HasConstraintName("FK_Depute_Member");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Region", "Region")
                        .WithMany("Deputes")
                        .HasForeignKey("RegionId")
                        .IsRequired()
                        .HasConstraintName("FK_Depute_Region");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Status", "Status")
                        .WithMany("Deputes")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Depute_Status");

                    b.Navigation("Provider");

                    b.Navigation("Region");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.DeputeAction", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Action", "Action")
                        .WithMany("DeputeActions")
                        .HasForeignKey("ActionId")
                        .IsRequired()
                        .HasConstraintName("FK_DeputeAction_Action");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Depute", "Depute")
                        .WithMany("DeputeActions")
                        .HasForeignKey("DeputeId")
                        .IsRequired()
                        .HasConstraintName("FK_DeputeAction_Depute");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "Member")
                        .WithMany("DeputeActions")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_DeputeAction_Member");

                    b.Navigation("Action");

                    b.Navigation("Depute");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.DeputeComplain", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Depute", "Depute")
                        .WithMany("DeputeComplains")
                        .HasForeignKey("DeputeId")
                        .IsRequired()
                        .HasConstraintName("FK_DeputeComplain_Depute");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "Member")
                        .WithMany("DeputeComplains")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_DeputeComplain_Member");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Status", "Status")
                        .WithMany("DeputeComplains")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_DeputeComplain_Status");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.SubTag", "SubTag")
                        .WithMany("DeputeComplains")
                        .HasForeignKey("SubTagId")
                        .IsRequired()
                        .HasConstraintName("FK_DeputeComplain_SubTag");

                    b.Navigation("Depute");

                    b.Navigation("Member");

                    b.Navigation("Status");

                    b.Navigation("SubTag");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.DeputeRecord", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Status", "ApplyStatus")
                        .WithMany("DeputeRecords")
                        .HasForeignKey("ApplyStatusId")
                        .IsRequired()
                        .HasConstraintName("FK_DeputeRecord_Status");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Depute", "Depute")
                        .WithMany("DeputeRecords")
                        .HasForeignKey("DeputeId")
                        .IsRequired()
                        .HasConstraintName("FK_DeputeRecord_Depute");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "Member")
                        .WithMany("DeputeRecords")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_DeputeRecord_Member");

                    b.Navigation("ApplyStatus");

                    b.Navigation("Depute");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.DeputeSkill", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Depute", "Depute")
                        .WithMany("DeputeSkills")
                        .HasForeignKey("DeputeId")
                        .IsRequired()
                        .HasConstraintName("FK_DeputeSkill_Depute");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Skill", "Skill")
                        .WithMany("DeputeSkills")
                        .HasForeignKey("SkillId")
                        .IsRequired()
                        .HasConstraintName("FK_DeputeSkill_Skill");

                    b.Navigation("Depute");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.JobAdvertise", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Advertise", "Advertise")
                        .WithMany("JobAdvertises")
                        .HasForeignKey("AdvertiseId")
                        .IsRequired()
                        .HasConstraintName("FK_JobAdvertise_AD");

                    b.Navigation("Advertise");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Member", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Gender", "GenderNavigation")
                        .WithMany("Members")
                        .HasForeignKey("Gender")
                        .IsRequired()
                        .HasConstraintName("FK_Member_Gender");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Status", "Status")
                        .WithMany("Members")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Member_Status");

                    b.Navigation("GenderNavigation");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.MemberChat", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "ReceiveMemberNavigation")
                        .WithMany("MemberChatReceiveMemberNavigations")
                        .HasForeignKey("ReceiveMember")
                        .IsRequired()
                        .HasConstraintName("FK_MemberChat_Member1");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "SenderMemberNavigation")
                        .WithMany("MemberChatSenderMemberNavigations")
                        .HasForeignKey("SenderMember")
                        .IsRequired()
                        .HasConstraintName("FK_MemberChat_Member");

                    b.Navigation("ReceiveMemberNavigation");

                    b.Navigation("SenderMemberNavigation");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.MemberCollection", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "Member")
                        .WithMany("MemberCollections")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_MemberCollection_Member");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.MemberCoupon", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Coupon", "Coupon")
                        .WithMany("MemberCoupons")
                        .HasForeignKey("CouponId")
                        .IsRequired()
                        .HasConstraintName("FK_MemberCoupon_Coupon");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "Member")
                        .WithMany("MemberCoupons")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_MemberCoupon_Member");

                    b.Navigation("Coupon");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.MemberTag", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "Member")
                        .WithMany("MemberTags")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_MemberTag_Member");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.SubTag", "SubTag")
                        .WithMany("MemberTags")
                        .HasForeignKey("SubTagId")
                        .HasConstraintName("FK_MemberTag_SubTag");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Tag", "Tag")
                        .WithMany("MemberTags")
                        .HasForeignKey("TagId")
                        .HasConstraintName("FK_MemberTag_Tag");

                    b.Navigation("Member");

                    b.Navigation("SubTag");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Order", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Coupon", "Coupon")
                        .WithMany("Orders")
                        .HasForeignKey("CouponId")
                        .HasConstraintName("FK_Order_Coupon");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "Member")
                        .WithMany("Orders")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Order_Member");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Payment", "Payment")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_Payment");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Status", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_Status");

                    b.Navigation("Coupon");

                    b.Navigation("Member");

                    b.Navigation("Payment");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.OrderProduct", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_OrderProduct_Order");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_OrderProduct_Product");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Product", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "Member")
                        .WithMany("Products")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Product_Member");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Status", "Status")
                        .WithMany("Products")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Product_Status");

                    b.Navigation("Member");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.ProductComplain", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "Memeber")
                        .WithMany("ProductComplains")
                        .HasForeignKey("MemeberId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductComplain_Member");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Product", "Product")
                        .WithMany("ProductComplains")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductComplain_Product");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Status", "Status")
                        .WithMany("ProductComplains")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductComplain_Status");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.SubTag", "SubTag")
                        .WithMany("ProductComplains")
                        .HasForeignKey("SubTagId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductComplain_SubTag");

                    b.Navigation("Memeber");

                    b.Navigation("Product");

                    b.Navigation("Status");

                    b.Navigation("SubTag");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.ProductEvaluate", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "Member")
                        .WithMany("ProductEvaluates")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductEvaluate_Member");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Product", "Product")
                        .WithMany("ProductEvaluates")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductEvaluate_Product");

                    b.Navigation("Member");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.ProductImage", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Image", "Image")
                        .WithMany("ProductImages")
                        .HasForeignKey("ImageId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductImage_Image");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductImage_Product");

                    b.Navigation("Image");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.ProductTag", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Product", "Product")
                        .WithMany("ProductTags")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductAction_Product");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.SubTag", "SubTag")
                        .WithMany("ProductTags")
                        .HasForeignKey("SubTagId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductAction_SubTag");

                    b.Navigation("Product");

                    b.Navigation("SubTag");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.RegionDistrict", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Region", "Region")
                        .WithMany("RegionDistricts")
                        .HasForeignKey("RegionId")
                        .IsRequired()
                        .HasConstraintName("FK_RegionDistrict_Region");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Reply", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Article", "Article")
                        .WithMany("Replies")
                        .HasForeignKey("ArticleId")
                        .IsRequired()
                        .HasConstraintName("FK_Reply_Article");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "Member")
                        .WithMany("Replies")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_Reply_Member");

                    b.Navigation("Article");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Skill", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.SkillClass", "SkillClass")
                        .WithMany("Skills")
                        .HasForeignKey("SkillClassId")
                        .IsRequired()
                        .HasConstraintName("FK_Skill_SkillClass");

                    b.Navigation("SkillClass");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.SubBlog", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Blog", "Blog")
                        .WithMany("SubBlogs")
                        .HasForeignKey("BlogId")
                        .IsRequired()
                        .HasConstraintName("FK_SubBlog_Blog");

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.SubTag", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Tag", "Tag")
                        .WithMany("SubTags")
                        .HasForeignKey("TagId")
                        .IsRequired()
                        .HasConstraintName("FK_SubTag_Tag");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.WishList", b =>
                {
                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Member", "Member")
                        .WithMany("WishLists")
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_WishList_Member");

                    b.HasOne("prjDB_GamingForm_Show.Models.Entities.Product", "Product")
                        .WithMany("WishLists")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_WishList_Product");

                    b.Navigation("Member");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Action", b =>
                {
                    b.Navigation("ArticleActions");

                    b.Navigation("DeputeActions");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Admin", b =>
                {
                    b.Navigation("ChatReceiveAdminNavigations");

                    b.Navigation("ChatSenderAdminNavigations");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.AdminRank", b =>
                {
                    b.Navigation("Admins");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Advertise", b =>
                {
                    b.Navigation("JobAdvertises");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Article", b =>
                {
                    b.Navigation("ArticleActions");

                    b.Navigation("ArticleComplains");

                    b.Navigation("InverseReplyArticle");

                    b.Navigation("Replies");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Blog", b =>
                {
                    b.Navigation("SubBlogs");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Coupon", b =>
                {
                    b.Navigation("MemberCoupons");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Depute", b =>
                {
                    b.Navigation("DeputeActions");

                    b.Navigation("DeputeComplains");

                    b.Navigation("DeputeRecords");

                    b.Navigation("DeputeSkills");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Gender", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Image", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Member", b =>
                {
                    b.Navigation("ArticleActions");

                    b.Navigation("ArticleComplains");

                    b.Navigation("Articles");

                    b.Navigation("DeputeActions");

                    b.Navigation("DeputeComplains");

                    b.Navigation("DeputeRecords");

                    b.Navigation("Deputes");

                    b.Navigation("MemberChatReceiveMemberNavigations");

                    b.Navigation("MemberChatSenderMemberNavigations");

                    b.Navigation("MemberCollections");

                    b.Navigation("MemberCoupons");

                    b.Navigation("MemberTags");

                    b.Navigation("Orders");

                    b.Navigation("ProductComplains");

                    b.Navigation("ProductEvaluates");

                    b.Navigation("Products");

                    b.Navigation("Replies");

                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Payment", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Product", b =>
                {
                    b.Navigation("OrderProducts");

                    b.Navigation("ProductComplains");

                    b.Navigation("ProductEvaluates");

                    b.Navigation("ProductImages");

                    b.Navigation("ProductTags");

                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Region", b =>
                {
                    b.Navigation("Deputes");

                    b.Navigation("RegionDistricts");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Skill", b =>
                {
                    b.Navigation("DeputeSkills");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.SkillClass", b =>
                {
                    b.Navigation("Skills");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Status", b =>
                {
                    b.Navigation("Advertises");

                    b.Navigation("Coupons");

                    b.Navigation("DeputeComplains");

                    b.Navigation("DeputeRecords");

                    b.Navigation("Deputes");

                    b.Navigation("Members");

                    b.Navigation("Orders");

                    b.Navigation("ProductComplains");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.SubBlog", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.SubTag", b =>
                {
                    b.Navigation("ArticleComplains");

                    b.Navigation("Blogs");

                    b.Navigation("DeputeComplains");

                    b.Navigation("MemberTags");

                    b.Navigation("ProductComplains");

                    b.Navigation("ProductTags");
                });

            modelBuilder.Entity("prjDB_GamingForm_Show.Models.Entities.Tag", b =>
                {
                    b.Navigation("MemberTags");

                    b.Navigation("SubTags");
                });
#pragma warning restore 612, 618
        }
    }
}
