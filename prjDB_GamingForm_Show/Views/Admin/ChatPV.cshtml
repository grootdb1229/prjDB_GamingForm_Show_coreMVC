@model IEnumerable<prjDB_GamingForm_Show.ViewModels.CAdminChatViewModel>
<div style="height:350px;width:250px">
    <div style="border-bottom:solid red 1px">
        <img src="~/production/images/@Model.FirstOrDefault().ReceiverImg" alt="..." class="img-circle profile_img" style="height:7vh;width:7vh">
        <span id="rn" style="font-size:20px;">@ViewBag.SendToName</span>
        <span id="sn" hidden>@Context.Session.GetString(CDictionary.SK_管理者名稱)</span>        
    </div>
    <div id="chatContent" style="height:150px ;max-height: 150px; overflow-y: auto;border:solid blue">
        @foreach (var chat in Model)
        {
            if(chat.SenderName == Context.Session.GetString(CDictionary.SK_管理者名稱))
            {
                <div style="text-align:right; color:red">
                    <span>@chat.ModefiedDate</span>
                    <p>@chat.ChatContent</p>
               </div>
            }
            else
            {
                <div style="text-align:left ; color:blue">
                    <span>@chat.ModefiedDate</span>
                    <p>@chat.ChatContent</p>
                </div>
            }
        }
    </div>
    <div class="mb-3">
        <input class="form-control" type="text" placeholder="請輸入..." aria-label="default input example" id="message">
        <button type="button" class="btn btn-primary" id="sendButton">傳送訊息</button>
    </div>

</div>

<script>
    //傳送訊息
    $('#sendButton').on('click', function () {
        let selfUserName = $('#sn').text() // 使用者名稱
        let message = $('#message').val();
        let sendToUserName = $('#rn').text() // 接收者的使用者名稱

        // 新增：呼叫 SignalR Hub 方法獲取接收者的 SignalR ID
        getSignalRIdByUserName(sendToUserName).then(function (connectionId) {
            // 修改：傳送訊息時使用接收者的 SignalR ID
            connection.invoke("SendMessage", selfUserName, message, connectionId, sendToUserName).catch(function (err) {
                console.error('傳送錯誤: ' + err.toString());
            });
        });
    });
    function getSignalRIdByUserName(userName) {
        return new Promise((resolve, reject) => {
            connection.invoke("GetConnectionIdByUserName", userName).then(function (connectionId) {
                // 在這裡可以使用 connectionId 進行相應的處理
                resolve(connectionId);
            }).catch(function (err) {
                reject(err);
            });
        });
    }
    // 更新聊天內容事件
    connection.on("SenderUpdContent", function (msg) {
        var messageBlock = document.getElementById("chatContent");

        // 獲取當前日期時間
        var currentDate = new Date();

        // 格式化日期時間為 "yyyy/MM/dd HH:mm"
        var formattedDateTime = currentDate.getFullYear() + "/" +
            (currentDate.getMonth() + 1).toString().padStart(2, '0') + "/" +
            currentDate.getDate().toString().padStart(2, '0') + " " +
            currentDate.getHours().toString().padStart(2, '0') + ":" +
            currentDate.getMinutes().toString().padStart(2, '0');

        // 創建一個 <div> 用於分辨發送人或接收人
        var div = document.createElement("div")
        div.style.textAlign = "right";
        div.style.color = "red";
        messageBlock.appendChild(div)

        // 創建一個 <span> 用於顯示時間
        var timeSpan = document.createElement("span");
        timeSpan.innerText = formattedDateTime;

        // 將 <span> 加入訊息內容
        div.appendChild(timeSpan);

        // 創建一個新的 <p> 元素
        var newMessage = document.createElement("p");
        // 設定新元素的內容為用戶傳遞的訊息
        newMessage.innerText = msg;

        // 將新元素加入訊息區塊
        timeSpan.appendChild(newMessage);  
        
        // 卷軸捲到最底部
        messageBlock.scrollTop = messageBlock.scrollHeight;
    });
    connection.on("ReceiverUpdContent", function (msg) {
        var messageBlock = document.getElementById("chatContent");

        // 獲取當前日期時間
        var currentDate = new Date();

        // 格式化日期時間為 "yyyy/MM/dd HH:mm"
        var formattedDateTime = currentDate.getFullYear() + "/" +
            (currentDate.getMonth() + 1).toString().padStart(2, '0') + "/" +
            currentDate.getDate().toString().padStart(2, '0') + " " +
            currentDate.getHours().toString().padStart(2, '0') + ":" +
            currentDate.getMinutes().toString().padStart(2, '0');

        // 創建一個 <div> 用於分辨發送人或接收人
        var div = document.createElement("div")
        div.style.textAlign = "left";
        div.style.color = "blue";
        messageBlock.appendChild(div)

        // 創建一個 <span> 用於顯示時間
        var timeSpan = document.createElement("span");
        timeSpan.innerText = formattedDateTime;

        // 將 <span> 加入訊息內容
        div.appendChild(timeSpan);

        // 創建一個新的 <p> 元素
        var newMessage = document.createElement("p");
        // 設定新元素的內容為用戶傳遞的訊息
        newMessage.innerText = msg;

        // 將新元素加入訊息區塊
        timeSpan.appendChild(newMessage);    
        
        // 卷軸捲到最底部
        messageBlock.scrollTop = messageBlock.scrollHeight;
    });
    var chatContentDiv = document.getElementById("chatContent");
    chatContentDiv.scrollTop = chatContentDiv.scrollHeight;
</script>


