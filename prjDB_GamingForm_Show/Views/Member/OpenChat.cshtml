@model IEnumerable<prjDB_GamingForm_Show.ViewModels.CPublicChatUseViewModel>
<style>
    .sender {
        text-align: right;
        border-radius: 5px;
        background-color: #0080FF;
        color: antiquewhite;
        margin-left: auto;
        margin-right: 5px;
        padding: 5px;
        margin-bottom: 5px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .receiver {
        text-align: left;
        border-radius: 5px;
        background-color: #272727;
        color: antiquewhite;
        margin-right: auto;
        margin-left: 5px;
        padding: 5px;
        margin-bottom: 5px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .messageP {
        align-self: flex-end;
        font-size: 20px;
        margin-top: 8px;
        margin-bottom: 0px;
        color: #FCFCFC
    }

    .messageSpan {
        color: #BEBEBE
    }

    .fixed-div {
        position: absolute;
        top: 150px; /* 固定在螢幕頂部 */
        right: 40px; /* 固定在螢幕右側 */
        padding: 10px;        
        width: 300px;
        max-width: 100%;
        height:500px;
        max-height: 500px;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
        border-radius:15px;
        background-color: #6C6C6C;
        opacity: 0.95;
        border: 3px groove #000;
        border-radius: 15px;
        color: #FFFFF4;
        text-align: center;
    }

    .listtitle{
        position: absolute;
        top: 100px; /* 固定在螢幕頂部 */
        right: 90px; /* 固定在螢幕右側 */
        padding: 10px;
    }    

    .chat-container {
        background-color: rgba(0, 0, 0, 0.4);
        border-radius: 5px;
        box-shadow: 0px 0px 10px 5px rgba(0,0,0,0.7);
        overflow: hidden;
        padding: 15px;
        margin-left: 15px;
        position: relative;
        width: 1100px;
        max-width: 100%;
        height:500px;
        max-height: 650px;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
    }
    
    .profile_img{
        border-radius: 50%;
        width: 90px;
        height: 90px;
        object-fit: cover; /* 保持圖片比例，裁切以填滿元素 */
    }
</style>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
</head>

<h2 style="display: flex;justify-content: center;">公開聊天室</h2>
<div id="chatContent" class="chat-container">
    @foreach (var chat in Model)
    {
        if (chat.SenderName == Context.Session.GetString(CDictionary.SK_UserName))
        {
            <div class="sender">
                @Context.Session.GetString(CDictionary.SK_UserName)
                <span class="messageSpan">@chat.ModefiedDate</span>
                <p class="messageP">@chat.Content</p>
            </div>
        }
        else
        {
            <div class="receiver">
                @chat.SenderName
                <span class="messageSpan">@chat.ModefiedDate</span>
                <p class="messageP">@chat.Content</p>
            </div>
        }
    }
</div>
<div id="username" hidden>@Context.Session.GetString(CDictionary.SK_UserName)</div>
<div class="form-floating" style="display: flex; align-items: flex-end;margin-top:5px;padding-left:15px;width:1160px">
    <textarea class="form-control" placeholder="請輸入..." id="message" style="border-radius:5px;background-color:#E0E0E0;"></textarea>
    <button type="button" class="btn btn-primary" id="sendButton"><i class="fa-solid fa-paper-plane"></i></button>
</div>
<div class="listtitle">
    <h2 style="font-size:30px">在線會員列表</h2>
</div>
<div id="memberList" class="fixed-div">
    <ul class="list-group" id="IDList"></ul>
</div>

@section Scripts{
    <script>
        var chatContentDiv = document.getElementById("chatContent");
        chatContentDiv.scrollTop = chatContentDiv.scrollHeight;
        // $('#memberList').load('@Url.Content("~/Member/ChatMemberList")');

        // 更新連線 ID 列表事件
        connection.on("UpdList", async function (jsonList) {            
            var list = JSON.parse(jsonList);            
            $("#IDList li").remove();
            for (i = 0; i < list.length; i++) {
                const reseponse = await fetch('@Url.Content("~/Member/GetMemberImg")?name=' + encodeURIComponent(list[i]))
                const data = await reseponse.text();
                const idres = await fetch('@Url.Content("~/Member/GetMemberId")?name=' + encodeURIComponent(list[i]))
                const id = await idres.text();
                
                // $("#IDList").append($("<li></li>").attr("class", "list-group-item").text(list[i]));
                // 創建新的 li 元素
                var listItem = $("<li></li>").attr("class", "list-group-item").css("display", "flex").css("align-items", "center").click(function () {
                    // 在點擊事件中呼叫 handleListItemClick 方法並傳遞 memberId 參數
                    handleListItemClick(id);
                });;
                
                // 如果 data 有效，則添加圖像元素
                if (data) {
                    var imgElement = $("<img>").attr("src", `../MemberPhoto/${data}`).attr("alt", "Member Image").css("margin-right", "10px");
                    imgElement.addClass("profile_img");  // 新增這行以添加類別
                    listItem.append(imgElement);
                }

                var p = document.createElement("p")
                p.innerText = list[i]
                listItem.append(p);

                // 將新的 li 元素添加到 #IDList
                $("#IDList").append(listItem);
            }
        });

        function handleListItemClick(id) {
            window.location.href = `@Url.Content("~/Member/MemberPageTest")?id=${id}`;
        }

        $('#sendButton').on('click', sendMessageToAllUser);

        $('#message').on('keydown', function (event) {
            if (event.key === "Enter" && !event.shiftKey) {
                event.preventDefault();
                sendMessageToAllUser();
            }
        });

        function sendMessageToAllUser() {
            let selfUserName = $('#username').text()
            let message = $('#message').val();
            connection.invoke("SendMessageToAll", selfUserName, message).catch(function (err) {
                console.error('傳送錯誤: ' + err.toString());
            });
            document.querySelector('#message').value = "";
        }

        connection.on("UpdContent", function (message, senderName) {            
            var messageBlock = document.getElementById("chatContent");
            let selfUserName = $('#username').text()
            
            // 獲取當前日期時間
            var currentDate = new Date();

            // 格式化日期時間
            var formattedDateTime = currentDate.getFullYear() + "/" +
                (currentDate.getMonth() + 1).toString().padStart(2, '0') + "/" +
                currentDate.getDate().toString().padStart(2, '0') + " " +
                currentDate.getHours().toString().padStart(2, '0') + ":" +        
                currentDate.getMinutes().toString().padStart(2, '0');

            if (senderName == selfUserName) {
                // 創建一個 <div> 用於分辨發送人或接收人
                var div = document.createElement("div")
                div.classList.add("sender")
                div.innerText = senderName
                messageBlock.appendChild(div)

                // 創建一個新的 <p> 元素
                var newMessage = document.createElement("p");
                newMessage.classList.add("messageP")
                // 設定新元素的內容為用戶傳遞的訊息
                newMessage.innerText = message;

                // 將新元素加入訊息區塊
                div.appendChild(newMessage);

                // 創建一個 <span> 用於顯示時間
                var timeSpan = document.createElement("span");
                timeSpan.classList.add("messageSpan")
                timeSpan.innerText = formattedDateTime;

                // 將 <span> 加入訊息內容
                div.appendChild(timeSpan);

                // 卷軸捲到最底部
                messageBlock.scrollTop = messageBlock.scrollHeight;
            }
            else {
                // 創建一個 <div> 用於分辨發送人或接收人
                var div = document.createElement("div")
                div.classList.add("receiver")
                div.innerText = senderName
                messageBlock.appendChild(div)

                // 創建一個新的 <p> 元素
                var newMessage = document.createElement("p");
                newMessage.classList.add("messageP")
                // 設定新元素的內容為用戶傳遞的訊息
                newMessage.innerText = message;

                // 將新元素加入訊息區塊
                div.appendChild(newMessage);

                // 創建一個 <span> 用於顯示時間
                var timeSpan = document.createElement("span");
                timeSpan.classList.add("messageSpan")
                timeSpan.innerText = formattedDateTime;

                // 將 <span> 加入訊息內容
                div.appendChild(timeSpan);

                // 卷軸捲到最底部
                messageBlock.scrollTop = messageBlock.scrollHeight;
            }

        });

    </script>
}


