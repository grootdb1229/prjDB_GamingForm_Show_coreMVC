@model IEnumerable<prjDB_GamingForm_Show.Models.Entities.DeputeRecord>



@{
    int intApplyCount = Model.Count(_ => !_.Depute.Status.Name.Contains("合作中") && !_.Depute.Status.Name.Contains("已完成"));
    string strApplyCount = intApplyCount == 0 ? "" : $"({intApplyCount})";

    int intIngCount = Model.Count(_ => _.Depute.Status.Name.Contains("合作中"));
    string strIngCount = intIngCount == 0 ? "" : $"({intIngCount})";

    int intComCount = Model.Count(_ => _.Depute.Status.Name.Contains("已完成"));
    string strComCount = intComCount == 0 ? "" : $"({intComCount})";
}
<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item" role="presentation" style="margin-bottom: 0px;">
        <button class="nav-link active" id="apply-tab" data-bs-toggle="tab" data-bs-target="#apply-tab-pane" type="button" role="tab" aria-controls="apply-tab-pane" aria-selected="true">已投遞 @strApplyCount</button>
    </li>
    <li class="nav-item" role="presentation" style="margin-bottom: 0px;">
        <button class="nav-link" id="apply-ing-tab" data-bs-toggle="tab" data-bs-target="#apply-ing-tab-pane" type="button" role="tab" aria-controls="apply-ing-tab-pane" aria-selected="false">合作中 @strIngCount</button>
    </li>
    <li class="nav-item" role="presentation" style="margin-bottom: 0px;">
        <button class="nav-link" id="apply-com-tab" onclick="readAllCom(event)" data-bs-toggle="tab" data-bs-target="#apply-com-tab-pane" type="button" role="tab" aria-controls="apply-com-tab-pane" aria-selected="false">已完成 @strComCount</button>
    </li>
</ul>


<div class="tab-content" id="myTabContent">
    <div class="tab-pane fade show active" id="apply-tab-pane" role="tabpanel" aria-labelledby="apply-tab" tabindex="0">

        <table class="table table-dark table-striped table-bordered align-middle">

            <tr class="text-center">
                <th hidden></th>
                <th class="col-*">
                    #
                </th>
                <th class="col-2">
                    標題
                </th>
                <th class="col-2">
                    自介內容
                </th>
                <th class="col-1">
                    狀態
                </th>
                <th class="col-1">
                    報酬
                </th>
                <th class="col-2">
                    更新時間
                </th>
                <th class="col-3"></th>
            </tr>


            @{
                int count = 0;
                foreach (var i in Model)
                {
                    if (i.Depute.Status.Name.Contains("合作中") || i.Depute.Status.Name.Contains("已完成"))
                    {
                        continue;
                    }
                    count++;
                    <tr>
                        <td hidden>@i.Id</td>
                        <td hidden>@i.DeputeId</td>
                        <td class="text-center">
                            @count
                        </td>
                        <td class="text-center">
                            @i.Depute.Title
                        </td>
                        <td class="text-truncate col-2" style="max-width: 150px;">
                            @{
                                if (i.RecordContent != null)
                                {
                                    @i.RecordContent
                                }
                                else
                                {
                                    @:未提供自介內容
                                }
                            }
                        </td>
                        <td class="text-center">
                            @i.ApplyStatus.Name
                        </td>
                        <td class="text-center">
                            @i.Depute.Salary.ToString("$###,###,##0")
                        </td>
                        <td class="text-center">
                            @i.Depute.Modifiedate.ToString("yyyy/MM/dd HH:mm")
                        </td>
                        <td class="text-center">
                            @Html.ActionLink("詳細資料", "Details", new { id = i.Id }, new { @class = "btn btn-secondary" })
                            <button class="btn btn-danger" onclick="deleteDeputeRecordAlert(@i.Id)">撤回</button>
                        </td>
                    </tr>
                }
            }
        </table>
    </div>
    <div class="tab-pane fade" id="apply-ing-tab-pane" role="tabpanel" aria-labelledby="apply-ing-tab" tabindex="0">

        <table class="table table-dark table-striped table-bordered align-middle">

            <tr class="text-center">
                <th hidden></th>
                <th class="col-*">
                    #
                </th>
                <th class="col-2">
                    標題
                </th>
                <th class="col-2">
                    自介內容
                </th>
                <th class="col-1">
                    狀態
                </th>
                <th class="col-1">
                    報酬
                </th>
                <th class="col-2">
                    更新時間
                </th>
                <th class="col-3"></th>
            </tr>


            @{
                int count2 = 0;
                foreach (var i in Model)
                {
                    if (!i.Depute.Status.Name.Contains("合作中"))
                    {
                        continue;
                    }
                    count2++;
                    <tr>
                        <td hidden>@i.Id</td>
                        <td hidden>@i.DeputeId</td>
                        <td class="text-center">
                            @count2
                        </td>
                        <td class="text-center">
                            @i.Depute.Title
                        </td>
                        <td class="text-truncate col-2" style="max-width: 150px;">
                            @{
                                if (i.RecordContent != null)
                                {
                                    @i.RecordContent
                                }
                                else
                                {
                                    @:未提供自介內容
                                }
                            }
                        </td>
                        <td class="text-center">
                            @i.ApplyStatus.Name
                        </td>
                        <td class="text-center">
                            @i.Depute.Salary.ToString("$###,###,##0")
                        </td>
                        <td class="text-center">
                            @i.Depute.Modifiedate.ToString("yyyy/MM/dd HH:mm")
                        </td>
                        <td class="text-center">
                            @{
                                if (i.ApplyStatus.Name.Contains("合作中") || i.ApplyStatus.Name.Contains("已完成"))
                                {
                                    string replyDisabled = i.ApplyStatus.Name.Contains("已完成") ? " disabled" : "";
                                    @Html.ActionLink("完成", "ReplyDepute", new { id = i.Id }, new { @class = "btn btn-success"+replyDisabled })
                                }
                            }
                            @Html.ActionLink("詳細資料", "Details", new { id = i.Id }, new { @class = "btn btn-secondary" })
                            <button class="btn btn-danger" onclick="deleteDeputeRecordAlert(@i.Id)">撤回</button>
                        </td>
                    </tr>
                }
            }
        </table>
    </div>
    <div class="tab-pane fade" id="apply-com-tab-pane" role="tabpanel" aria-labelledby="apply-com-tab" tabindex="0">
        <table class="table table-dark table-striped table-bordered align-middle">

            <tr class="text-center">
                <th hidden></th>
                <th class="col-*">
                    #
                </th>
                <th class="col-2">
                    標題
                </th>
                <th class="col-3">
                    自介內容
                </th>
                <th class="col-*" hidden>
                    狀態
                </th>
                <th class="col-1">
                    報酬
                </th>
                <th class="col-2">
                    更新時間
                </th>
                <th hidden>檔案名稱</th>
                <th class="col-3"></th>
            </tr>


            @{
                int count3 = 0;
                foreach (var i in Model)
                {
                    if (!i.Depute.Status.Name.Contains("已完成"))
                    {
                        continue;
                    }
                    count3++;
                    <tr class="comDepute">
                        <td hidden>@i.Id</td>
                        <td hidden>@i.DeputeId</td>
                        <td class="text-center">
                            @count3
                        </td>
                        <td class="text-center">
                            @i.Depute.Title
                        </td>
                        <td class="text-truncate" style="max-width: 150px;">
                            @{
                                if (i.RecordContent != null)
                                {
                                    @i.RecordContent
                                }
                                else
                                {
                                    @:未提供自介內容
                                }
                            }
                        </td>
                        <td class="text-center" hidden>
                            @i.ApplyStatus.Name
                        </td>
                        <td class="text-center">
                            @i.Depute.Salary.ToString("$###,###,##0")
                        </td>
                        <td class="text-center">
                            @i.Depute.Modifiedate.ToString("yyyy/MM/dd HH:mm")
                        </td>
                        <td class="text-center" hidden>
                            @i.ReplyFileName
                        </td>
                        <td class="text-center">
                            @{
                                string hasFile = "";
                                hasFile = i.ReplyFileName == null ? "disabled" : "";
                            }
                            <button type="button" class="btn btn-info" onclick="downloadFile(event)" @hasFile>檔案下載</button>
                            @Html.ActionLink("詳細資料", "Details", new { id = i.Id }, new { @class = "btn btn-secondary" })
                        </td>
                    </tr>
                }
            }
        </table>
    </div>
</div>


<script>
    function downloadFile(event) {
        const fileName = event.target.parentElement.previousElementSibling.textContent.trim();
        console.log(fileName);
        fetch(`@Url.Content("~/depute/downloadFile")?fileName=${fileName}`, {
            method: 'GET',
        }).then(response => response.blob())
            .then(blob => {
                //創建一個用來下載的URL
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = fileName;
                document.body.appendChild(a);
                a.click();
                window.URL.revokeObjectURL(url);
            });
    }

    function readAllCom(event) {
        const allRecords = event.target.parentElement.parentElement.nextElementSibling.querySelectorAll('.comDepute');
        const allRecordsArray = Array.from(allRecords);
        const recordIDs = allRecordsArray.map(depute => parseInt(depute.firstElementChild.textContent));
        const promises = recordIDs.map(async function (recordID) {
            await changeRecordStatus(recordID, 39);//39狀態為:已完成(已讀)
        });
        Promise.all(promises).then(() => {
            loadOverview();
        });
    }
    async function changeRecordStatus(recordID, statusID) {
        var deputerecordstatus = JSON.stringify({ id: recordID, statusid: statusID });
        console.log(recordID, statusID);
        console.log(deputerecordstatus);
        const response = await fetch(`@Url.Content("~/depute/changeDeputeRecordStatus")?jsonString=${deputerecordstatus}`);
        const statusName = await response.text();
    }

    function deleteDeputeRecordAlert(deputeRecordID) {
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: "btn btn-success",
                cancelButton: "btn btn-danger"
            },
            buttonsStyling: false
        });
        swalWithBootstrapButtons.fire({
            color: "#D0D0D0",
            background: "#343a40",
            scrollbarPadding: false,
            title: "確定撤回嗎?",
            text: "此動作無法復原!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "是的，確定撤回!",
            cancelButtonText: "取消!",
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`@Url.Content("~/depute/DeleteDeputeRecord")?id=${deputeRecordID}`);
                swalWithBootstrapButtons.fire({
                    color: "#D0D0D0",
                    background: "#343a40",
                    scrollbarPadding: false,
                    title: "已撤回!",
                    text: "該應徵已撤回",
                    icon: "success"
                });
                setTimeout(function () {
                    reloadPartial();
                }, 500);
            } else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                swalWithBootstrapButtons.fire({
                    color: "#D0D0D0",
                    background: "#343a40",
                    scrollbarPadding: false,
                    title: "已取消",
                    text: "應徵尚未撤回",
                    icon: "error"
                });
            }
        });
    }

    function reloadPartial() {
        $.ajax({
            url: '@Url.Action("PartialReceiveList", "depute")',
            type: "GET",
            success: function (result) {
                $('#divReceivePart').html(result);
            },
            error: function (error) {
                console.error('Error reloading partial view:', error);
            }
        })
    }
</script>
