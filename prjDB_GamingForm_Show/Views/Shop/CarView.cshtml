@model IEnumerable<prjDB_GamingForm_Show.ViewModels.CShoppingCarViewModel>

@{
    ViewData["Title"] = "CarView";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>購物車</h2>

<p>
    @Html.ActionLink("繼續購物", "Index", "Shop",null, new { @class = "btn btn-outline-dark mt-auto" })
   
</p>
<table class="table">
    <thead>
        <tr class="textcolor">
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Count)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.total)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@{
     int count = 0;
        decimal pay = 0;
        decimal sum = 0;
    foreach (var item in Model) {
        count++;
                <tr class="textcolor">
                <td>
                   <img class="card-img-top" src="~/images/shop/@item.FImagePath" alt="..." style="height:120px; width=80px;" />
                </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Count)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.total)
                    </td>
                            @using (Html.BeginForm("EditCar", "Shop", FormMethod.Post))
                    {
                                <input type="hidden" name="ProductID" value="@item.ProductID" />
                                <td>
                                    @Html.TextBox("txtCount", "1", new { @class = "form-control text-center me-3", @style = "max-width: 3rem" })
                                </td>
                                <td>
                                    <input type="submit" value="修改數量" class="btn btn-outline-dark mt-auto" />
                                </td>
                    }
                            <td>
                                @Html.ActionLink("查看商品", "Details", "Shop", new { id = item.ProductID }, new { @class = "btn btn-outline-dark mt-auto" })
                                @Html.ActionLink("刪除購物車", "DeleteFromCar", "Shop", new { id = item.ProductID }, new { @class = "btn btn-outline-dark mt-auto", onclick = "return confirm('確定要刪除嗎?')" })
                            </td>
                </tr>
         sum += item.total;
}

        pay =  sum;
}
    </tbody>
</table>
<p>
    <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample" style="background-color:#a81d1d; border-color: #272727">
        選擇優惠卷
    </button>
</p>
<div class="collapse" id="collapseExample">
    <div style="border:solid 2px  #a81d1d ; margin-bottom:20px;">
        <div class="form-group" id="Coupon" style="background-color:#4F4F4F">
            <div class="d-flex flex-wrap">
                <button type="button" id="CouponSelect" value="${x.couponId}" onclick="Couponselect()">
                    <div class="card text-bg-light mb-3" style="max-width: 18rem;">
                        <div class="card-header">${x.title}</div>
                        <div class="card-body">
                            <h5 class="card-title">${x.discount}</h5>
                            <p class="card-text">${x.reduce}</p>
                        </div>
                    </div>
                </button>
            </div>
        </div>
        <input type="hidden" id="CouponOptions" name="CouponOptions" />
    </div>

</div>
<li>交易金額:@sum.ToString("###,###,##0")</li>
<div id="pay">
    <li>應付金額:@pay.ToString("###,###,##0")</li>
</div>


<div class="container" style="margin-left:-10px">
    
    <label for="payment">請選擇付款方式</label>
    <select id="payment" name="payment">
        <option value="apple">Apple</option>
        <option value="banana">Banana</option>
        <option value="orange">Orange</option>
        <option value="grape">Grape</option>
    </select>
        <input type="button" value="結帳" class="btn btn-outline-dark mt-auto" id="btnpurchase" style="margin-left:30px" /> 
     @Html.ActionLink("綠界測試", "Index", "Payment",null, null)
    
    @* @Html.DropDownListFor(m => m.payment, new SelectList(ViewBag.Items, "Value", "Text")) *@
</div>

<style>
    .textcolor {
        color:white
     }
</style>
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="~/js/sweetalert2.all.js"></script>
<script>
    

    const btn = document.querySelector('#btnpurchase');
    const payment = document.querySelector('#payment');
    
    async function LoadPayment() { 
        const response = await fetch('@Url.Content("~/Shop/payment")');
        const data = await response.json();
        console.log(data)
        const Payment = data.map(x => `
                                     <option value="${x.paymentId}">${x.name}</option>
                            `).join('');

        payment.innerHTML = Payment; 
    }
    LoadPayment();
    btn.addEventListener('click', () => {
        const payid = payment.value

        fetch(`@Url.Content("~/Shop/Purchase")?payment=${payid}`)
            //.then(Swal.fire({
            //    title: "結帳成功!",
            //    text: "訂單已送至電子信箱!",
            //    icon: "success",
            //})
            // .done(() => { window.location.href = "/Shop/Index" })
            
    })
    
    
    
   

    payment.addEventListener('change', () => { 
        console.log(payment.value)
    })

    const CouponDiv = document.querySelector('#Coupon .d-flex');

    async function LoadCoupon() {
        const response = await fetch('@Url.Content("~/Shop/Coupon")');
        const data = await response.json();
        const Coupon = data.map(x => `
                            <button type="button" id="${x.couponId}" value="${x.couponId}" onclick="Couponselect1(${x.couponId})">
                                <div  style="max-width: 18rem;" >
              <div class="card-header" >${x.title}</div>
    </div>
        </button>
                                    `).join('');

        CouponDiv.innerHTML = Coupon;

    }

    LoadCoupon();

    //async function Couponselect(value){
        
    //    console.log(value)
    //    const CouponFrag = $(document.createDocumentFragment());
    //    const payprice =  document.querySelector('#pay');

    //    const response = await fetch(`@Url.Content("~/Shop/Couponselect")?id=${value}`);
    //    const data = await response.json();
    //    console.log(data);
    //    const Coupon = data.map(x => `<li>應付金額:${x.sumprice}("###,###,##0")</li>`)
    //    //join('');
    //    CouponFrag.append(Coupon);
    //    console.log(Coupon);
    //    $('#pay').html(CouponFrag);
    //    //payprice.innerHTML = Coupon;
    //}

    function Couponselect1(value) {
        $.ajax('@Url.Content("~/Shop/Couponselect")', {
            "type": 'get', //POST、PUT、DELETE//
            "data": { "id": value },
            "dataType": "text"
        })
            .done((data) => {
                const CouponFrag = $(document.createDocumentFragment());
                const Coupons = `<li>應付金額:${data}</li>`
                CouponFrag.append(Coupons);
                $('#pay').html(CouponFrag)
            })
            
    }

    
</script>