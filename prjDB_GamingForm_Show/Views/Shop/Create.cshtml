@model prjDB_GamingForm_Show.Models.Shop.CProductWarp


@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container px-4 px-lg-5 mt-2">

        <h2>新增商品</h2>


        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.ImageID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.ImageID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ImageID, "", new { @class = "text-danger" })*@
                <input type="file" />
            </div>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        @*產品上架/更新日要在類別或是controllers中獨立寫下GetDate*@
        @*<div class="form-group">
    @Html.LabelFor(model => model.AvailableDate, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
    @Html.EditorFor(model => model.AvailableDate, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.AvailableDate, "", new { @class = "text-danger" })
    </div>
    </div>*@
        @*<div class="form-group">
    <div class="col-md-10">
    @Html.DropDownListFor(model => model.屬性
    new SelectList(Model.屬性值, "Value", "Text"),
    "請選擇",
    new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
    </div>
    </div>*@
        @{

            prjDB_GamingForm_Show.Models.Entities.DbGamingFormTestContext db = new prjDB_GamingForm_Show.Models.Entities.DbGamingFormTestContext();
            List<prjDB_GamingForm_Show.Models.Entities.Tag> list = (from aa in db.Tags where aa.TagId < 4 select aa).ToList();
            List<prjDB_GamingForm_Show.Models.Entities.SubTag> Sublist = (from aa in db.SubTags select aa).ToList();
            <!--這句話暫時沒用-->
        }   <!--這是為了設計標籤，但是還沒學AJ技術所以先寫死-->
        <div class="form-group">
            <label for="Tags" class="control-label col-md-2">選擇標籤：</label>
            <div class="col-md-10">
                <select id="Tags" name="TagID" class="form-control">
                    @foreach (var tag in list)
                    {
                        <option value="@tag.Name">@tag.Name</option>
                    }
                </select>
            </div>
        </div>
        <label for="Tags" class="control-label col-md-2">選擇子標籤：</label>
        <div style="width: 50vw; height: 30vh; border: 1px solid black; display: flex; flex-wrap: wrap; justify-content: space-between; align-content: flex-start; overflow-y: auto;">
            @foreach (var tag in Sublist)
            {
                <div style="width: 18%; margin-bottom: 5px;">
                    <input type="checkbox" id="@tag.Name" name="SubTagID" value="@tag.Name">
                    <label for="@tag.Name">
                        <span style="font-weight: bold;">@tag.Name</span>

                    </label>
                </div>
            }
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.ProductContent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.ProductContent, new { htmlAttributes = new { @class = "form-control" } })*@
                <textarea style="width: 50vw; height: 45vh; resize: none;" name="ProductContent" cols="120">請輸入產品描述</textarea>
                @Html.ValidationMessageFor(model => model.ProductContent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitStock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitStock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitStock, "", new { @class = "text-danger" })
            </div>
        </div>
        @*產品狀態要在類別或是controllers中獨立寫下""上架中"的邏輯*@
        @*<div class="form-group">
    @Html.LabelFor(model => model.StatusID, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
    @Html.EditorFor(model => model.StatusID, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger" })
    </div>
    </div>*@
        @*上架人員的ID在類別或是controllers中獨立寫下邏輯*@
        @*<div class="form-group">
    @Html.LabelFor(model => model.MemberID, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
    @Html.EditorFor(model => model.MemberID, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.MemberID, "", new { @class = "text-danger" })
    </div>
    </div>*@

        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="送出並新增" class="btn btn-outline-dark mt-auto" />

                @Html.ActionLink("回首頁", "Index", "Shop", null, new { @class = "btn btn-outline-dark mt-auto" })
            </div>
        </div>

    </div>


}


